{"version":3,"sources":["cmps/NavBar/NavBar.jsx","pages/Home/Home.jsx","App.jsx","reportWebVitals.js","store/reducers/userReducer.js","store/reducers/contactReducer.js","store/index.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","Home","WelcomeRoute","props","App","this","user","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITAL_STATE","contacts","rootReducer","combineReducers","userReducer","state","action","type","moves","move","contactReducer","currEditContact","contact","filter","_id","contactId","map","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","e","prompt"],"mappings":"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","file":"static/js/main.7b380b67.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavBar.scss';\n\nexport default function NavBar() {\n  return (\n    <div className=\"navbar-container\">\n      <div className=\"navbar-container container\">\n        <Link to=\"/\">\n          <div className=\"nav-logo\">\n            <span>Designx</span>\n          </div>\n        </Link>\n        <div className=\"nav-menu\">\n          <ul>\n            <li>\n              <Link to=\"/contact\">Contacts</Link>\n            </li>\n            <li>\n              <Link to=\"/charts\">Charts</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './Home.scss';\n\nexport default function Home() {\n  return (\n    <div className=\"hp-container\">\n\n    </div>\n  )\n}\n","import Navbar from './cmps/NavBar';\nimport Home from './pages/Home';\nimport 'antd/dist/antd.css';\n\nimport './assets/scss/global.scss';\nimport './App.scss';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport React, { Component } from 'react';\n\nconst WelcomeRoute = (props) => {\n  return (\n    <Route {...props} />\n  );\n};\n\nexport class App extends Component {\n\n\n  render() {\n    const { user } = this.props;\n    return (\n      <div className=\"main-container\">\n        <Router>\n          <Navbar />\n          <main>\n            <Switch>\n              <WelcomeRoute\n                path=\"/\"\n                component={Home}\n              />\n            </Switch>\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITAL_STATE = {\r\n    user: {}\r\n}\r\n\r\nexport function userReducer(state = INITAL_STATE, action){\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case 'LOAD_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'ADD_MOVE':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    moves: [...state.user.moves, action.move]\r\n                }\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}","const INITAL_STATE = {\r\n    contacts: []\r\n}\r\n\r\nexport function contactReducer(state = INITAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'SET_CURR_EDIT_CONTACT':\r\n            return {\r\n                ...state,\r\n                currEditContact: action.contact\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        case 'REMOVE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact._id !== action.contactId)\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact._id ? action.contact : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { contactReducer } from './reducers/contactReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  userReducer,\r\n  contactReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from '../src/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\nreportWebVitals();\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  console.log('beforeinstallprompt event has fired')\n  e.prompt()\n});"],"sourceRoot":""}